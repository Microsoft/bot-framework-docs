<Type Name="ChannelAccount" FullName="Microsoft.Bot.Schema.ChannelAccount">
  <TypeSignature Language="C#" Value="public class ChannelAccount" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelAccount extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Schema.ChannelAccount" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelAccount" />
  <TypeSignature Language="F#" Value="type ChannelAccount = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
    <AssemblyVersion>4.0.7.0</AssemblyVersion>
    <AssemblyVersion>4.1.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Channel account information needed to route a message
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelAccount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.ChannelAccount.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ChannelAccount class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelAccount (string id = null, string name = null, string role = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string name, string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.ChannelAccount.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional id As String = null, Optional name As String = null, Optional role As String = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Schema.ChannelAccount : string * string * string -&gt; Microsoft.Bot.Schema.ChannelAccount" Usage="new Microsoft.Bot.Schema.ChannelAccount (id, name, role)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Channel id for the user or bot on this channel
            (Example: joe@smith.com, or @joesmith or 123456)</param>
        <param name="name">Display friendly name</param>
        <param name="role">Role of the entity behind the account (Example:
            User, Bot, etc.). Possible values include: 'user', 'bot'</param>
        <summary>
            Initializes a new instance of the ChannelAccount class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.ChannelAccount.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="Microsoft.Bot.Schema.ChannelAccount.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets channel id for the user or bot on this channel
            (Example: joe@smith.com, or @joesmith or 123456)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.ChannelAccount.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Bot.Schema.ChannelAccount.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets display friendly name
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JObject Properties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.Linq.JObject Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.ChannelAccount.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Property Properties As JObject" />
      <MemberSignature Language="F#" Value="member this.Properties : Newtonsoft.Json.Linq.JObject with get, set" Usage="Microsoft.Bot.Schema.ChannelAccount.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
          <AttributeName>Newtonsoft.Json.JsonExtensionData(ReadData=true, WriteData=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets properties that are not otherwise defined by the <see cref="T:Microsoft.Bot.Schema.ChannelAccount" /> type but that
            might appear in the REST JSON object.
            </summary>
        <value>The extended properties for the object.</value>
        <remarks>With this, properties not represented in the defined type are not dropped when
            the JSON object is deserialized, but are instead stored in this property. Such properties
            will be written to a JSON object when the instance is serialized.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.ChannelAccount.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="F#" Value="member this.Role : string with get, set" Usage="Microsoft.Bot.Schema.ChannelAccount.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="role")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets role of the entity behind the account (Example: User,
            Bot, etc.). Possible values include: 'user', 'bot'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>