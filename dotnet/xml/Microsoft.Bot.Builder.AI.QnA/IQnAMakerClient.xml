<Type Name="IQnAMakerClient" FullName="Microsoft.Bot.Builder.AI.QnA.IQnAMakerClient">
  <TypeSignature Language="C#" Value="public interface IQnAMakerClient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQnAMakerClient" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.AI.QnA.IQnAMakerClient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQnAMakerClient" />
  <TypeSignature Language="F#" Value="type IQnAMakerClient = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.AI.QnA</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Client to access a QnA Maker knowledge base.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CallTrainAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CallTrainAsync (Microsoft.Bot.Builder.AI.QnA.FeedbackRecords feedbackRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CallTrainAsync(class Microsoft.Bot.Builder.AI.QnA.FeedbackRecords feedbackRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.AI.QnA.IQnAMakerClient.CallTrainAsync(Microsoft.Bot.Builder.AI.QnA.FeedbackRecords)" />
      <MemberSignature Language="VB.NET" Value="Public Function CallTrainAsync (feedbackRecords As FeedbackRecords) As Task" />
      <MemberSignature Language="F#" Value="abstract member CallTrainAsync : Microsoft.Bot.Builder.AI.QnA.FeedbackRecords -&gt; System.Threading.Tasks.Task" Usage="iQnAMakerClient.CallTrainAsync feedbackRecords" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.QnA</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feedbackRecords" Type="Microsoft.Bot.Builder.AI.QnA.FeedbackRecords" />
      </Parameters>
      <Docs>
        <param name="feedbackRecords">Feedback records.</param>
        <summary>
            Send feedback to the knowledge base.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.AI.QnA.QueryResult[]&gt; GetAnswersAsync (Microsoft.Bot.Builder.ITurnContext turnContext, Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions options, System.Collections.Generic.Dictionary&lt;string,string&gt; telemetryProperties, System.Collections.Generic.Dictionary&lt;string,double&gt; telemetryMetrics = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.AI.QnA.QueryResult[]&gt; GetAnswersAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions options, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; telemetryProperties, class System.Collections.Generic.Dictionary`2&lt;string, float64&gt; telemetryMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.AI.QnA.IQnAMakerClient.GetAnswersAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnswersAsync (turnContext As ITurnContext, options As QnAMakerOptions, telemetryProperties As Dictionary(Of String, String), Optional telemetryMetrics As Dictionary(Of String, Double) = null) As Task(Of QueryResult())" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Collections.Generic.Dictionary&lt;string, double&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.AI.QnA.QueryResult[]&gt;" Usage="iQnAMakerClient.GetAnswersAsync (turnContext, options, telemetryProperties, telemetryMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.QnA</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.AI.QnA.QueryResult[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="options" Type="Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions" />
        <Parameter Name="telemetryProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="telemetryMetrics" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="turnContext">The Turn Context that contains the user question to be queried against your knowledge base.</param>
        <param name="options">The options for the QnA Maker knowledge base. If null, constructor option is used for this instance.</param>
        <param name="telemetryProperties">Additional properties to be logged to telemetry with the QnaMessage event.</param>
        <param name="telemetryMetrics">Additional metrics to be logged to telemetry with the QnaMessage event.</param>
        <summary>
            Generates an answer from the knowledge base.
            </summary>
        <returns>A list of answers for the user query, sorted in decreasing order of ranking score.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnswersRawAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.AI.QnA.QueryResults&gt; GetAnswersRawAsync (Microsoft.Bot.Builder.ITurnContext turnContext, Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions options, System.Collections.Generic.Dictionary&lt;string,string&gt; telemetryProperties = default, System.Collections.Generic.Dictionary&lt;string,double&gt; telemetryMetrics = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.AI.QnA.QueryResults&gt; GetAnswersRawAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions options, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; telemetryProperties, class System.Collections.Generic.Dictionary`2&lt;string, float64&gt; telemetryMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.AI.QnA.IQnAMakerClient.GetAnswersRawAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnswersRawAsync (turnContext As ITurnContext, options As QnAMakerOptions, Optional telemetryProperties As Dictionary(Of String, String) = null, Optional telemetryMetrics As Dictionary(Of String, Double) = null) As Task(Of QueryResults)" />
      <MemberSignature Language="F#" Value="abstract member GetAnswersRawAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Collections.Generic.Dictionary&lt;string, double&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.AI.QnA.QueryResults&gt;" Usage="iQnAMakerClient.GetAnswersRawAsync (turnContext, options, telemetryProperties, telemetryMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.QnA</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.AI.QnA.QueryResults&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="options" Type="Microsoft.Bot.Builder.AI.QnA.QnAMakerOptions" />
        <Parameter Name="telemetryProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="telemetryMetrics" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="turnContext">The Turn Context that contains the user question to be queried against your knowledge base.</param>
        <param name="options">The options for the QnA Maker knowledge base. If null, constructor option is used for this instance.</param>
        <param name="telemetryProperties">Additional properties to be logged to telemetry with the QnaMessage event.</param>
        <param name="telemetryMetrics">Additional metrics to be logged to telemetry with the QnaMessage event.</param>
        <summary>
            Generates an answer from the knowledge base.
            </summary>
        <returns>A list of answers for the user query, sorted in decreasing order of ranking score.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLowScoreVariation">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.AI.QnA.QueryResult[] GetLowScoreVariation (Microsoft.Bot.Builder.AI.QnA.QueryResult[] queryResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.AI.QnA.QueryResult[] GetLowScoreVariation(class Microsoft.Bot.Builder.AI.QnA.QueryResult[] queryResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.AI.QnA.IQnAMakerClient.GetLowScoreVariation(Microsoft.Bot.Builder.AI.QnA.QueryResult[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLowScoreVariation (queryResult As QueryResult()) As QueryResult()" />
      <MemberSignature Language="F#" Value="abstract member GetLowScoreVariation : Microsoft.Bot.Builder.AI.QnA.QueryResult[] -&gt; Microsoft.Bot.Builder.AI.QnA.QueryResult[]" Usage="iQnAMakerClient.GetLowScoreVariation queryResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.QnA</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.AI.QnA.QueryResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryResult" Type="Microsoft.Bot.Builder.AI.QnA.QueryResult[]" />
      </Parameters>
      <Docs>
        <param name="queryResult">User query output.</param>
        <summary>
            Filters the ambiguous question for active learning.
            </summary>
        <returns>Filtered array of ambiguous question.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
