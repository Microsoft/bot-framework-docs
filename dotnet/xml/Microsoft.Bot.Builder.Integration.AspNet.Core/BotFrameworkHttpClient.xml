<Type Name="BotFrameworkHttpClient" FullName="Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient">
  <TypeSignature Language="C#" Value="public class BotFrameworkHttpClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BotFrameworkHttpClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class BotFrameworkHttpClient" />
  <TypeSignature Language="F#" Value="type BotFrameworkHttpClient = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotFrameworkHttpClient (System.Net.Http.HttpClient httpClient, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider = null, Microsoft.Extensions.Logging.ILogger logger = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpClient httpClient, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.#ctor(System.Net.Http.HttpClient,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient : System.Net.Http.HttpClient * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient" Usage="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient (httpClient, credentialProvider, channelProvider, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="httpClient">To be added.</param>
        <param name="credentialProvider">To be added.</param>
        <param name="channelProvider">To be added.</param>
        <param name="logger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppCredentialMapCache">
      <MemberSignature Language="C#" Value="protected static System.Collections.Concurrent.ConcurrentDictionary&lt;string,Microsoft.Bot.Connector.Authentication.AppCredentials&gt; AppCredentialMapCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Concurrent.ConcurrentDictionary`2&lt;string, class Microsoft.Bot.Connector.Authentication.AppCredentials&gt; AppCredentialMapCache" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.AppCredentialMapCache" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property AppCredentialMapCache As ConcurrentDictionary(Of String, AppCredentials)" />
      <MemberSignature Language="F#" Value="member this.AppCredentialMapCache : System.Collections.Concurrent.ConcurrentDictionary&lt;string, Microsoft.Bot.Connector.Authentication.AppCredentials&gt;" Usage="Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.AppCredentialMapCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,Microsoft.Bot.Connector.Authentication.AppCredentials&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildCredentialsAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.Authentication.AppCredentials&gt; BuildCredentialsAsync (string appId, string oAuthScope = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Connector.Authentication.AppCredentials&gt; BuildCredentialsAsync(string appId, string oAuthScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.BuildCredentialsAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildCredentialsAsync (appId As String, Optional oAuthScope As String = null) As Task(Of AppCredentials)" />
      <MemberSignature Language="F#" Value="abstract member BuildCredentialsAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.Authentication.AppCredentials&gt;&#xA;override this.BuildCredentialsAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.Authentication.AppCredentials&gt;" Usage="botFrameworkHttpClient.BuildCredentialsAsync (appId, oAuthScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.Authentication.AppCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="oAuthScope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">The application id.</param>
        <param name="oAuthScope">The optional OAuth scope.</param>
        <summary>
            Logic to build an <see cref="T:Microsoft.Bot.Connector.Authentication.AppCredentials" /> object to be used to acquire tokens
            for this HttpClient.
            </summary>
        <returns>The app credentials to be used to acquire tokens.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelProvider">
      <MemberSignature Language="C#" Value="protected Microsoft.Bot.Connector.Authentication.IChannelProvider ChannelProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Connector.Authentication.IChannelProvider ChannelProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.ChannelProvider" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ChannelProvider As IChannelProvider" />
      <MemberSignature Language="F#" Value="member this.ChannelProvider : Microsoft.Bot.Connector.Authentication.IChannelProvider" Usage="Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.ChannelProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Connector.Authentication.IChannelProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CredentialProvider">
      <MemberSignature Language="C#" Value="protected Microsoft.Bot.Connector.Authentication.ICredentialProvider CredentialProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Connector.Authentication.ICredentialProvider CredentialProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.CredentialProvider" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CredentialProvider As ICredentialProvider" />
      <MemberSignature Language="F#" Value="member this.CredentialProvider : Microsoft.Bot.Connector.Authentication.ICredentialProvider" Usage="Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.CredentialProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Connector.Authentication.ICredentialProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpClient">
      <MemberSignature Language="C#" Value="protected System.Net.Http.HttpClient HttpClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpClient HttpClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.HttpClient" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HttpClient As HttpClient" />
      <MemberSignature Language="F#" Value="member this.HttpClient : System.Net.Http.HttpClient" Usage="Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.HttpClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="protected Microsoft.Extensions.Logging.ILogger Logger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILogger Logger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.Logger" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Logger As ILogger" />
      <MemberSignature Language="F#" Value="member this.Logger : Microsoft.Extensions.Logging.ILogger" Usage="Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.Logger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostActivityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt; PostActivityAsync (string fromBotId, string toBotId, Uri toUrl, Uri serviceUrl, string conversationId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.InvokeResponse&gt; PostActivityAsync(string fromBotId, string toBotId, class System.Uri toUrl, class System.Uri serviceUrl, string conversationId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpClient.PostActivityAsync(System.String,System.String,System.Uri,System.Uri,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.PostActivityAsync : string * string * Uri * Uri * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;" Usage="botFrameworkHttpClient.PostActivityAsync (fromBotId, toBotId, toUrl, serviceUrl, conversationId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromBotId" Type="System.String" />
        <Parameter Name="toBotId" Type="System.String" />
        <Parameter Name="toUrl" Type="System.Uri" />
        <Parameter Name="serviceUrl" Type="System.Uri" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fromBotId">The MicrosoftAppId of the bot sending the activity.</param>
        <param name="toBotId">The MicrosoftAppId of the bot receiving the activity.</param>
        <param name="toUrl">The URL of the bot receiving the activity.</param>
        <param name="serviceUrl">The callback Url for the skill host.</param>
        <param name="conversationId">A conversation ID to use for the conversation with the skill.</param>
        <param name="activity">activity to forward.</param>
        <param name="cancellationToken">cancellation Token.</param>
        <summary>
            Forwards an activity to a skill (bot).
            </summary>
        <returns>Async task with optional invokeResponse.</returns>
        <remarks>NOTE: Forwarding an activity to a skill will flush UserState and ConversationState changes so that skill has accurate state.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
