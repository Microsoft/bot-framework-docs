<Type Name="CertificateAppCredentials" FullName="Microsoft.Bot.Connector.Authentication.CertificateAppCredentials">
  <TypeSignature Language="C#" Value="public class CertificateAppCredentials : Microsoft.Bot.Connector.Authentication.AppCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CertificateAppCredentials extends Microsoft.Bot.Connector.Authentication.AppCredentials" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class CertificateAppCredentials&#xA;Inherits AppCredentials" />
  <TypeSignature Language="F#" Value="type CertificateAppCredentials = class&#xA;    inherit AppCredentials" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Connector.Authentication.AppCredentials</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            CertificateAppCredentials auth implementation and cache.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, string channelAuthTenant = null, System.Net.Http.HttpClient customHttpClient = null, Microsoft.Extensions.Logging.ILogger logger = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As ClientAssertionCertificate, Optional channelAuthTenant As String = null, Optional customHttpClient As HttpClient = null, Optional logger As ILogger = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Client certificate to be presented for authentication.</param>
        <param name="channelAuthTenant">Optional. The oauth token tenant.</param>
        <param name="customHttpClient">Optional <see cref="T:System.Net.Http.HttpClient" /> to be used when acquiring tokens.</param>
        <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to gather telemetry data while acquiring and managing credentials.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, string appId, string channelAuthTenant = null, System.Net.Http.HttpClient customHttpClient = null, Microsoft.Extensions.Logging.ILogger logger = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, string appId, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As X509Certificate2, appId As String, Optional channelAuthTenant As String = null, Optional customHttpClient As HttpClient = null, Optional logger As ILogger = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * string * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, appId, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Client certificate to be presented for authentication.</param>
        <param name="appId">Microsoft application Id related to the certifiacte.</param>
        <param name="channelAuthTenant">Optional. The oauth token tenant.</param>
        <param name="customHttpClient">Optional <see cref="T:System.Net.Http.HttpClient" /> to be used when acquiring tokens.</param>
        <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to gather telemetry data while acquiring and managing credentials.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAuthenticator">
      <MemberSignature Language="C#" Value="protected override Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt; BuildAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Lazy`1&lt;class Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt; BuildAuthenticator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.BuildAuthenticator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BuildAuthenticator () As Lazy(Of AdalAuthenticator)" />
      <MemberSignature Language="F#" Value="override this.BuildAuthenticator : unit -&gt; Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt;" Usage="certificateAppCredentials.BuildAuthenticator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
