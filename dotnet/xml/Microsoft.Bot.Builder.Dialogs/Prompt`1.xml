<Type Name="Prompt&lt;T&gt;" FullName="Microsoft.Bot.Builder.Dialogs.Prompt&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class Prompt&lt;T&gt; : Microsoft.Bot.Builder.Dialogs.Dialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Prompt`1&lt;T&gt; extends Microsoft.Bot.Builder.Dialogs.Dialog" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.Prompt`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Prompt(Of T)&#xA;Inherits Dialog" />
  <TypeSignature Language="F#" Value="type Prompt&lt;'T&gt; = class&#xA;    inherit Dialog" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
    <AssemblyVersion>4.0.7.0</AssemblyVersion>
    <AssemblyVersion>4.1.5.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.Dialogs.Dialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">The type of value the prompt returns.</typeparam>
    <summary>
            Defines the core behavior of prompt dialogs.
            </summary>
    <remarks>When the prompt ends, it should return a <typeparamref name="T" /> object that
            represents the value that was prompted for.
            Use <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogSet.Add(Microsoft.Bot.Builder.Dialogs.Dialog)" /> or <see cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.AddDialog(Microsoft.Bot.Builder.Dialogs.Dialog)" />
            to add a prompt to a dialog set or component dialog, respectively.
            Use <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)" /> or
            <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)" /> to start the prompt.
            If you start a prompt from a <see cref="T:Microsoft.Bot.Builder.Dialogs.WaterfallStep" /> in a <see cref="T:Microsoft.Bot.Builder.Dialogs.WaterfallDialog" />,
            then the prompt result will be available in the next step of the waterfall.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Prompt (string dialogId, Microsoft.Bot.Builder.Dialogs.PromptValidator&lt;T&gt; validator = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dialogId, class Microsoft.Bot.Builder.Dialogs.PromptValidator`1&lt;!T&gt; validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogId As String, Optional validator As PromptValidator(Of T) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Dialogs.Prompt&lt;'T&gt; : string * Microsoft.Bot.Builder.Dialogs.PromptValidator&lt;'T&gt; -&gt; Microsoft.Bot.Builder.Dialogs.Prompt&lt;'T&gt;" Usage="new Microsoft.Bot.Builder.Dialogs.Prompt&lt;'T&gt; (dialogId, validator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogId" Type="System.String" />
        <Parameter Name="validator" Type="Microsoft.Bot.Builder.Dialogs.PromptValidator&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="dialogId">The ID to assign to this prompt.</param>
        <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1" /> that contains additional,
            custom validation for this prompt.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Prompt`1" /> class.
            Called from constructors in derived classes to initialize the <see cref="T:Microsoft.Bot.Builder.Dialogs.Prompt`1" /> class.
            </summary>
        <remarks>The value of <paramref name="dialogId" /> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet" /> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog" /> to which the prompt is added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChoices">
      <MemberSignature Language="C#" Value="protected Microsoft.Bot.Schema.IMessageActivity AppendChoices (Microsoft.Bot.Schema.IMessageActivity prompt, string channelId, System.Collections.Generic.IList&lt;Microsoft.Bot.Builder.Dialogs.Choices.Choice&gt; choices, Microsoft.Bot.Builder.Dialogs.Choices.ListStyle style, Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.Bot.Schema.IMessageActivity AppendChoices(class Microsoft.Bot.Schema.IMessageActivity prompt, string channelId, class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Builder.Dialogs.Choices.Choice&gt; choices, valuetype Microsoft.Bot.Builder.Dialogs.Choices.ListStyle style, class Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.AppendChoices(Microsoft.Bot.Schema.IMessageActivity,System.String,System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},Microsoft.Bot.Builder.Dialogs.Choices.ListStyle,Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.AppendChoices : Microsoft.Bot.Schema.IMessageActivity * string * System.Collections.Generic.IList&lt;Microsoft.Bot.Builder.Dialogs.Choices.Choice&gt; * Microsoft.Bot.Builder.Dialogs.Choices.ListStyle * Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions * System.Threading.CancellationToken -&gt; Microsoft.Bot.Schema.IMessageActivity" Usage="prompt.AppendChoices (prompt, channelId, choices, style, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IMessageActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="Microsoft.Bot.Schema.IMessageActivity" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="choices" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Builder.Dialogs.Choices.Choice&gt;" />
        <Parameter Name="style" Type="Microsoft.Bot.Builder.Dialogs.Choices.ListStyle" />
        <Parameter Name="options" Type="Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="prompt">The activity to append the choices to.</param>
        <param name="channelId">The ID of the user's channel.</param>
        <param name="choices">The choices to append.</param>
        <param name="style">Indicates how the choices should be presented to the user.</param>
        <param name="options">The formatting options to use when presenting the choices.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            When overridden in a derived class, appends choices to the activity when the user is prompted for input.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>If the task is successful, the result contains the updated activity.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDialogAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; BeginDialogAsync (Microsoft.Bot.Builder.Dialogs.DialogContext dc, object options, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; BeginDialogAsync(class Microsoft.Bot.Builder.Dialogs.DialogContext dc, object options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.BeginDialogAsync : Microsoft.Bot.Builder.Dialogs.DialogContext * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="prompt.BeginDialogAsync (dc, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="Microsoft.Bot.Builder.Dialogs.DialogContext" />
        <Parameter Name="options" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dc">The dialog context for the current turn of the conversation.</param>
        <param name="options">Optional, additional information to pass to the prompt being started.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Called when a prompt dialog is pushed onto the dialog stack and is being activated.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>If the task is successful, the result indicates whether the prompt is still
            active after the turn has been processed by the prompt.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueDialogAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ContinueDialogAsync (Microsoft.Bot.Builder.Dialogs.DialogContext dc, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ContinueDialogAsync(class Microsoft.Bot.Builder.Dialogs.DialogContext dc, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ContinueDialogAsync : Microsoft.Bot.Builder.Dialogs.DialogContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="prompt.ContinueDialogAsync (dc, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="Microsoft.Bot.Builder.Dialogs.DialogContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dc">The dialog context for the current turn of conversation.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Called when a prompt dialog is the active dialog and the user replied with a new activity.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.
            <para>The prompt generally continues to receive the user's replies until it accepts the
            user's reply as valid input for the prompt.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPromptAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task OnPromptAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Collections.Generic.IDictionary&lt;string,object&gt; state, Microsoft.Bot.Builder.Dialogs.PromptOptions options, bool isRetry, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnPromptAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; state, class Microsoft.Bot.Builder.Dialogs.PromptOptions options, bool isRetry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member OnPromptAsync : Microsoft.Bot.Builder.ITurnContext * System.Collections.Generic.IDictionary&lt;string, obj&gt; * Microsoft.Bot.Builder.Dialogs.PromptOptions * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="prompt.OnPromptAsync (turnContext, state, options, isRetry, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="options" Type="Microsoft.Bot.Builder.Dialogs.PromptOptions" />
        <Parameter Name="isRetry" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">Context for the current turn of conversation with the user.</param>
        <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
        <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)" />.</param>
        <param name="isRetry">true if this is the first time this prompt dialog instance
            on the stack is prompting the user for input; otherwise, false.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            When overridden in a derived class, prompts the user for input.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRecognizeAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult&lt;T&gt;&gt; OnRecognizeAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Collections.Generic.IDictionary&lt;string,object&gt; state, Microsoft.Bot.Builder.Dialogs.PromptOptions options, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1&lt;!T&gt;&gt; OnRecognizeAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; state, class Microsoft.Bot.Builder.Dialogs.PromptOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member OnRecognizeAsync : Microsoft.Bot.Builder.ITurnContext * System.Collections.Generic.IDictionary&lt;string, obj&gt; * Microsoft.Bot.Builder.Dialogs.PromptOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult&lt;'T&gt;&gt;" Usage="prompt.OnRecognizeAsync (turnContext, state, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="options" Type="Microsoft.Bot.Builder.Dialogs.PromptOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">Context for the current turn of conversation with the user.</param>
        <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
        <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)" />.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            When overridden in a derived class, attempts to recognize the user's input.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepromptDialogAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task RepromptDialogAsync (Microsoft.Bot.Builder.ITurnContext turnContext, Microsoft.Bot.Builder.Dialogs.DialogInstance instance, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task RepromptDialogAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class Microsoft.Bot.Builder.Dialogs.DialogInstance instance, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.RepromptDialogAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.Dialogs.DialogInstance * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="prompt.RepromptDialogAsync (turnContext, instance, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="instance" Type="Microsoft.Bot.Builder.Dialogs.DialogInstance" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">Context for the current turn of conversation with the user.</param>
        <param name="instance">The instance of the dialog on the stack.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Called when a prompt dialog has been requested to re-prompt the user for input.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeDialogAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ResumeDialogAsync (Microsoft.Bot.Builder.Dialogs.DialogContext dc, Microsoft.Bot.Builder.Dialogs.DialogReason reason, object result = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ResumeDialogAsync(class Microsoft.Bot.Builder.Dialogs.DialogContext dc, valuetype Microsoft.Bot.Builder.Dialogs.DialogReason reason, object result, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ResumeDialogAsync : Microsoft.Bot.Builder.Dialogs.DialogContext * Microsoft.Bot.Builder.Dialogs.DialogReason * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="prompt.ResumeDialogAsync (dc, reason, result, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="Microsoft.Bot.Builder.Dialogs.DialogContext" />
        <Parameter Name="reason" Type="Microsoft.Bot.Builder.Dialogs.DialogReason" />
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dc">The dialog context for the current turn of the conversation.</param>
        <param name="reason">An enumeration values that indicates why the dialog resumed.</param>
        <param name="result">Optional, value returned from the previous dialog on the stack.
            The type of the value returned is dependent on the previous dialog.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Called when a prompt dialog resumes being the active dialog on the dialog stack, such as
            when the previous active dialog on the stack completes.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>