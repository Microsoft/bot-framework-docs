<Type Name="DialogContext" FullName="Microsoft.Bot.Builder.Dialogs.DialogContext">
  <TypeSignature Language="C#" Value="public class DialogContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.DialogContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogContext" />
  <TypeSignature Language="F#" Value="type DialogContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
    <AssemblyVersion>4.0.7.0</AssemblyVersion>
    <AssemblyVersion>4.1.5.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{GetType().Name}[{ActiveDialog?.Id}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides context for the current state of the dialog stack.
            </summary>
    <remarks>The <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context" /> property contains the <see cref="T:Microsoft.Bot.Builder.ITurnContext" />
            for the current turn.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogContext (Microsoft.Bot.Builder.Dialogs.DialogSet dialogs, Microsoft.Bot.Builder.Dialogs.DialogContext parentDialogContext, Microsoft.Bot.Builder.Dialogs.DialogState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.Dialogs.DialogSet dialogs, class Microsoft.Bot.Builder.Dialogs.DialogContext parentDialogContext, class Microsoft.Bot.Builder.Dialogs.DialogState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.#ctor(Microsoft.Bot.Builder.Dialogs.DialogSet,Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogs As DialogSet, parentDialogContext As DialogContext, state As DialogState)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Dialogs.DialogContext : Microsoft.Bot.Builder.Dialogs.DialogSet * Microsoft.Bot.Builder.Dialogs.DialogContext * Microsoft.Bot.Builder.Dialogs.DialogState -&gt; Microsoft.Bot.Builder.Dialogs.DialogContext" Usage="new Microsoft.Bot.Builder.Dialogs.DialogContext (dialogs, parentDialogContext, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogs" Type="Microsoft.Bot.Builder.Dialogs.DialogSet" />
        <Parameter Name="parentDialogContext" Type="Microsoft.Bot.Builder.Dialogs.DialogContext" />
        <Parameter Name="state" Type="Microsoft.Bot.Builder.Dialogs.DialogState" />
      </Parameters>
      <Docs>
        <param name="dialogs">Parent dialog set.</param>
        <param name="parentDialogContext">Parent dialog state.</param>
        <param name="state">Current dialog state.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogContext (Microsoft.Bot.Builder.Dialogs.DialogSet dialogs, Microsoft.Bot.Builder.ITurnContext turnContext, Microsoft.Bot.Builder.Dialogs.DialogState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.Dialogs.DialogSet dialogs, class Microsoft.Bot.Builder.ITurnContext turnContext, class Microsoft.Bot.Builder.Dialogs.DialogState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.#ctor(Microsoft.Bot.Builder.Dialogs.DialogSet,Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogs As DialogSet, turnContext As ITurnContext, state As DialogState)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Dialogs.DialogContext : Microsoft.Bot.Builder.Dialogs.DialogSet * Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.Dialogs.DialogState -&gt; Microsoft.Bot.Builder.Dialogs.DialogContext" Usage="new Microsoft.Bot.Builder.Dialogs.DialogContext (dialogs, turnContext, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogs" Type="Microsoft.Bot.Builder.Dialogs.DialogSet" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="Microsoft.Bot.Builder.Dialogs.DialogState" />
      </Parameters>
      <Docs>
        <param name="dialogs">dialogset.</param>
        <param name="turnContext">turn context.</param>
        <param name="state">dialogState.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext" /> class from Turn context.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Dialogs.DialogInstance ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Dialogs.DialogInstance ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.DialogContext.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogInstance" />
      <MemberSignature Language="F#" Value="member this.ActiveDialog : Microsoft.Bot.Builder.Dialogs.DialogInstance" Usage="Microsoft.Bot.Builder.Dialogs.DialogContext.ActiveDialog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Dialogs.DialogInstance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the cached instance of the active dialog on the top of the stack or <c>null</c> if the stack is empty.
            </summary>
        <value>
            The cached instance of the active dialog on the top of the stack or <c>null</c> if the stack is empty.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDialogAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; BeginDialogAsync (string dialogId, object options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; BeginDialogAsync(string dialogId, object options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.BeginDialogAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="dialogContext.BeginDialogAsync (dialogId, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dialogId" Type="System.String" />
        <Parameter Name="options" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dialogId">ID of the dialog to start.</param>
        <param name="options">Optional, information to pass to the dialog being started.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Starts a new dialog and pushes it onto the dialog stack.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="CancelAllDialogsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; CancelAllDialogsAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; CancelAllDialogsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.CancelAllDialogsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.CancelAllDialogsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="dialogContext.CancelAllDialogsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Deletes any existing dialog stack thus cancelling all dialogs on the stack.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result indicates that dialogs were canceled after the
             turn was processed by the dialog or that the stack was already empty.
            
             In general, the parent context is the dialog or bot turn handler that started the dialog.
             If the parent is a dialog, the stack calls the parent's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)" />
             method to return a result to the parent dialog. If the parent dialog does not implement
             `ResumeDialogAsync`, then the parent will end, too, and the result is passed to the next
             parent context.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="CancelAllDialogsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; CancelAllDialogsAsync (bool cancelParents, string eventName = null, object eventValue = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; CancelAllDialogsAsync(bool cancelParents, string eventName, object eventValue, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.CancelAllDialogsAsync(System.Boolean,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.CancelAllDialogsAsync : bool * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="dialogContext.CancelAllDialogsAsync (cancelParents, eventName, eventValue, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancelParents" Type="System.Boolean" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventValue" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancelParents">If true the cancelation will bubble up through any parent dialogs as well.</param>
        <param name="eventName">The event.</param>
        <param name="eventValue">The event value.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Deletes any existing dialog stack thus cancelling all dialogs on the stack.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result indicates that dialogs were canceled after the
             turn was processed by the dialog or that the stack was already empty.
            
             In general, the parent context is the dialog or bot turn handler that started the dialog.
             If the parent is a dialog, the stack calls the parent's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)" />
             method to return a result to the parent dialog. If the parent dialog does not implement
             `ResumeDialogAsync`, then the parent will end, too, and the result is passed to the next
             parent context.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Dialogs.DialogContext Child { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Dialogs.DialogContext Child" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Child" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Child As DialogContext" />
      <MemberSignature Language="F#" Value="member this.Child : Microsoft.Bot.Builder.Dialogs.DialogContext" Usage="Microsoft.Bot.Builder.Dialogs.DialogContext.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Dialogs.DialogContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets dialog context for child if there is an active child.
            </summary>
        <value>
            Dialog context for child if there is an active child.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.ITurnContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.ITurnContext Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ITurnContext" />
      <MemberSignature Language="F#" Value="member this.Context : Microsoft.Bot.Builder.ITurnContext" Usage="Microsoft.Bot.Builder.Dialogs.DialogContext.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.ITurnContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the context for the current turn of conversation.
            </summary>
        <value>
            The context for the current turn of conversation.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueDialogAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ContinueDialogAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ContinueDialogAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ContinueDialogAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.ContinueDialogAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="dialogContext.ContinueDialogAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Continues execution of the active dialog, if there is one, by passing the current
             <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext" /> to the active dialog's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)" /> method.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result indicates whether the dialog is still
             active after the turn has been processed by the dialog.
            
             Check the <see cref="P:Microsoft.Bot.Builder.TurnContext.Responded" /> property after the call completes
             to determine if the active dialog sent a reply message to the user.
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Dialogs.DialogSet Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Dialogs.DialogSet Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As DialogSet" />
      <MemberSignature Language="F#" Value="member this.Dialogs : Microsoft.Bot.Builder.Dialogs.DialogSet" Usage="Microsoft.Bot.Builder.Dialogs.DialogContext.Dialogs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Dialogs.DialogSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the set of dialogs which are active for the current dialog container.
            </summary>
        <value>
            The set of dialogs which are active for the current dialog container.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitEventAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; EmitEventAsync (string name, object value = null, bool bubble = true, bool fromLeaf = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; EmitEventAsync(string name, object value, bool bubble, bool fromLeaf, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EmitEventAsync(System.String,System.Object,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EmitEventAsync : string * obj * bool * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dialogContext.EmitEventAsync (name, value, bubble, fromLeaf, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="bubble" Type="System.Boolean" />
        <Parameter Name="fromLeaf" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">Name of the event to raise.</param>
        <param name="value">Value to send along with the event.</param>
        <param name="bubble">Flag to control whether the event should be bubbled to its parent if not handled locally. Defaults to a value of `true`.</param>
        <param name="fromLeaf">Whether the event is emitted from a leaf node.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches for a dialog with a given ID.
            Emits a named event for the current dialog, or someone who started it, to handle.
            </summary>
        <returns>True if the event was handled.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDialogAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; EndDialogAsync (object result = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; EndDialogAsync(object result, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EndDialogAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="dialogContext.EndDialogAsync (result, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="result">Optional, result to pass to the parent context.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Ends a dialog by popping it off the stack and returns an optional result to the dialogs
             parent.The parent dialog is the dialog the started the on being ended via a call to
             either[begin()](#begin) or [prompt()](#prompt).
             The parent dialog will have its `Dialog.resume()` method invoked with any returned
             result. If the parent dialog hasn't implemented a `resume()` method then it will be
             automatically ended as well and the result passed to its parent. If there are no more
             parent dialogs on the stack then processing of the turn will end.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result indicates that the dialog ended after the
             turn was processed by the dialog.
            
             In general, the parent context is the dialog or bot turn handler that started the dialog.
             If the parent is a dialog, the stack calls the parent's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)" /> method to
             return a result to the parent dialog. If the parent dialog does not implement `ResumeDialogAsyn`,
             then the parent will end, too, and the result passed to the next parent context.
            
             The returned <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogTurnResult" /> contains the return value in its
             <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogTurnResult.Result" /> property.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ReplaceDialogAsync(System.String,System.Object,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.EndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="FindDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Dialogs.Dialog FindDialog (string dialogId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Builder.Dialogs.Dialog FindDialog(string dialogId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.FindDialog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDialog (dialogId As String) As Dialog" />
      <MemberSignature Language="F#" Value="member this.FindDialog : string -&gt; Microsoft.Bot.Builder.Dialogs.Dialog" Usage="dialogContext.FindDialog dialogId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Dialogs.Dialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dialogId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dialogId">dialog id to find.</param>
        <summary>
            Find the dialog id for the given context.
            </summary>
        <returns>dialog with that id.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Dialogs.DialogContext Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Dialogs.DialogContext Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As DialogContext" />
      <MemberSignature Language="F#" Value="member this.Parent : Microsoft.Bot.Builder.Dialogs.DialogContext with get, set" Usage="Microsoft.Bot.Builder.Dialogs.DialogContext.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Dialogs.DialogContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext" />, if any. Used when searching for the ID of a dialog to start.
            </summary>
        <value>
            The parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext" />, if any. Used when searching for the ID of a dialog to start.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; PromptAsync (string dialogId, Microsoft.Bot.Builder.Dialogs.PromptOptions options, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; PromptAsync(string dialogId, class Microsoft.Bot.Builder.Dialogs.PromptOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.PromptAsync : string * Microsoft.Bot.Builder.Dialogs.PromptOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="dialogContext.PromptAsync (dialogId, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dialogId" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Bot.Builder.Dialogs.PromptOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dialogId">ID of the prompt dialog to start.</param>
        <param name="options">Information to pass to the prompt dialog being started.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Helper function to simplify formatting the options for calling a prompt dialog. This helper will
            take a `PromptOptions` argument and then call[begin(context, dialogId, options)](#begin).
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceDialogAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ReplaceDialogAsync (string dialogId, object options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ReplaceDialogAsync(string dialogId, object options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ReplaceDialogAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.ReplaceDialogAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="dialogContext.ReplaceDialogAsync (dialogId, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dialogId" Type="System.String" />
        <Parameter Name="options" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dialogId">ID of the new dialog to start.</param>
        <param name="options">Optional, information to pass to the dialog being started.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Starts a new dialog and replaces on the stack the currently active dialog with the new one.
            This is particularly useful for creating loops or redirecting to another dialog.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="RepromptDialogAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RepromptDialogAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RepromptDialogAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.DialogContext.RepromptDialogAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.RepromptDialogAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="dialogContext.RepromptDialogAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Calls the currently active dialog's
            <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)" />
            method. Used with dialogs that implement a re-prompt behavior.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="Stack">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Bot.Builder.Dialogs.DialogInstance&gt; Stack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogInstance&gt; Stack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Stack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stack As List(Of DialogInstance)" />
      <MemberSignature Language="F#" Value="member this.Stack : System.Collections.Generic.List&lt;Microsoft.Bot.Builder.Dialogs.DialogInstance&gt;" Usage="Microsoft.Bot.Builder.Dialogs.DialogContext.Stack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Bot.Builder.Dialogs.DialogInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current dialog stack.
            </summary>
        <value>
            The current dialog stack.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
