<Type Name="Recognizer" FullName="Microsoft.Bot.Builder.Dialogs.Recognizer">
  <TypeSignature Language="C#" Value="public class Recognizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Recognizer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.Recognizer" />
  <TypeSignature Language="VB.NET" Value="Public Class Recognizer" />
  <TypeSignature Language="F#" Value="type Recognizer = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Recognizer base class.
            </summary>
    <remarks>
            Recognizers operate in a DialogContext environment to recognize user input into Intents and Entities. 
            This class models 3 virtual methods around
            * Pure DialogContext (where the recognition happens against current state dialogcontext
            * Activity (where the recognition is from an Activity)
            * Text/Locale (where the recognition is from text/locale)
            The default implementation of DialogContext method is to use Context.Activity and call the activity method.
            The default implementation of Activity method is to filter to Message activities and pull out text/locale and call the text/locale method.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Recognizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Recognizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRecognizerResultTelemetryProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.Dictionary&lt;string,string&gt; FillRecognizerResultTelemetryProperties (Microsoft.Bot.Builder.RecognizerResult recognizerResult, System.Collections.Generic.Dictionary&lt;string,string&gt; telemetryProperties, Microsoft.Bot.Builder.ITurnContext turnContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; FillRecognizerResultTelemetryProperties(class Microsoft.Bot.Builder.RecognizerResult recognizerResult, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; telemetryProperties, class Microsoft.Bot.Builder.ITurnContext turnContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Recognizer.FillRecognizerResultTelemetryProperties(Microsoft.Bot.Builder.RecognizerResult,System.Collections.Generic.Dictionary{System.String,System.String},Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FillRecognizerResultTelemetryProperties (recognizerResult As RecognizerResult, telemetryProperties As Dictionary(Of String, String), Optional turnContext As ITurnContext = null) As Dictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="abstract member FillRecognizerResultTelemetryProperties : Microsoft.Bot.Builder.RecognizerResult * System.Collections.Generic.Dictionary&lt;string, string&gt; * Microsoft.Bot.Builder.ITurnContext -&gt; System.Collections.Generic.Dictionary&lt;string, string&gt;&#xA;override this.FillRecognizerResultTelemetryProperties : Microsoft.Bot.Builder.RecognizerResult * System.Collections.Generic.Dictionary&lt;string, string&gt; * Microsoft.Bot.Builder.ITurnContext -&gt; System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="recognizer.FillRecognizerResultTelemetryProperties (recognizerResult, telemetryProperties, turnContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recognizerResult" Type="Microsoft.Bot.Builder.RecognizerResult" />
        <Parameter Name="telemetryProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="recognizerResult">To be added.</param>
        <param name="telemetryProperties">To be added.</param>
        <param name="turnContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.Recognizer.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="Microsoft.Bot.Builder.Dialogs.Recognizer.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty("id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets id of the recognizer.
            </summary>
        <value>Id.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.RecognizerResult&gt; RecognizeAsync (Microsoft.Bot.Builder.Dialogs.DialogContext dialogContext, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default, System.Collections.Generic.Dictionary&lt;string,string&gt; telemetryProperties = default, System.Collections.Generic.Dictionary&lt;string,double&gt; telemetryMetrics = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.RecognizerResult&gt; RecognizeAsync(class Microsoft.Bot.Builder.Dialogs.DialogContext dialogContext, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; telemetryProperties, class System.Collections.Generic.Dictionary`2&lt;string, float64&gt; telemetryMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Recognizer.RecognizeAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RecognizeAsync (dialogContext As DialogContext, activity As Activity, Optional cancellationToken As CancellationToken = null, Optional telemetryProperties As Dictionary(Of String, String) = null, Optional telemetryMetrics As Dictionary(Of String, Double) = null) As Task(Of RecognizerResult)" />
      <MemberSignature Language="F#" Value="abstract member RecognizeAsync : Microsoft.Bot.Builder.Dialogs.DialogContext * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Collections.Generic.Dictionary&lt;string, double&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.RecognizerResult&gt;&#xA;override this.RecognizeAsync : Microsoft.Bot.Builder.Dialogs.DialogContext * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Collections.Generic.Dictionary&lt;string, double&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.RecognizerResult&gt;" Usage="recognizer.RecognizeAsync (dialogContext, activity, cancellationToken, telemetryProperties, telemetryMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.RecognizerResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dialogContext" Type="Microsoft.Bot.Builder.Dialogs.DialogContext" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="telemetryProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="telemetryMetrics" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="dialogContext">Dialog context.</param>
        <param name="activity">activity to recognize.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <param name="telemetryProperties">Additional properties to be logged to telemetry with the LuisResult event.</param>
        <param name="telemetryMetrics">Additional metrics to be logged to telemetry with the LuisResult event.</param>
        <summary>
            Runs current DialogContext.TurnContext.Activity through a recognizer and returns a generic recognizer result.
            </summary>
        <returns>Analysis of utterance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;T&gt; RecognizeAsync&lt;T&gt; (Microsoft.Bot.Builder.Dialogs.DialogContext dialogContext, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default, System.Collections.Generic.Dictionary&lt;string,string&gt; telemetryProperties = default, System.Collections.Generic.Dictionary&lt;string,double&gt; telemetryMetrics = default) where T : Microsoft.Bot.Builder.IRecognizerConvertnew();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; RecognizeAsync&lt;.ctor (class Microsoft.Bot.Builder.IRecognizerConvert) T&gt;(class Microsoft.Bot.Builder.Dialogs.DialogContext dialogContext, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; telemetryProperties, class System.Collections.Generic.Dictionary`2&lt;string, float64&gt; telemetryMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Recognizer.RecognizeAsync``1(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RecognizeAsync(Of T As {IRecognizerConvertNew}) (dialogContext As DialogContext, activity As Activity, Optional cancellationToken As CancellationToken = null, Optional telemetryProperties As Dictionary(Of String, String) = null, Optional telemetryMetrics As Dictionary(Of String, Double) = null) As Task(Of T)" />
      <MemberSignature Language="F#" Value="abstract member RecognizeAsync : Microsoft.Bot.Builder.Dialogs.DialogContext * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Collections.Generic.Dictionary&lt;string, double&gt; -&gt; System.Threading.Tasks.Task&lt;'T (requires 'T :&gt; Microsoft.Bot.Builder.IRecognizerConvert and 'T : (new : unit -&gt; 'T))&gt; (requires 'T :&gt; Microsoft.Bot.Builder.IRecognizerConvert and 'T : (new : unit -&gt; 'T))&#xA;override this.RecognizeAsync : Microsoft.Bot.Builder.Dialogs.DialogContext * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Collections.Generic.Dictionary&lt;string, double&gt; -&gt; System.Threading.Tasks.Task&lt;'T (requires 'T :&gt; Microsoft.Bot.Builder.IRecognizerConvert and 'T : (new : unit -&gt; 'T))&gt; (requires 'T :&gt; Microsoft.Bot.Builder.IRecognizerConvert and 'T : (new : unit -&gt; 'T))" Usage="recognizer.RecognizeAsync (dialogContext, activity, cancellationToken, telemetryProperties, telemetryMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.Bot.Builder.IRecognizerConvert</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dialogContext" Type="Microsoft.Bot.Builder.Dialogs.DialogContext" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="telemetryProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="telemetryMetrics" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The recognition result type.</typeparam>
        <param name="dialogContext">Dialog context.</param>
        <param name="activity">activity to recognize.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <param name="telemetryProperties">Additional properties to be logged to telemetry with the LuisResult event.</param>
        <param name="telemetryMetrics">Additional metrics to be logged to telemetry with the LuisResult event.</param>
        <summary>
            Runs current DialogContext.TurnContext.Activity through a recognizer and returns a strongly-typed recognizer result using IRecognizerConvert.
            </summary>
        <returns>Analysis of utterance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TelemetryClient">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.IBotTelemetryClient TelemetryClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.IBotTelemetryClient TelemetryClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Dialogs.Recognizer.TelemetryClient" />
      <MemberSignature Language="VB.NET" Value="Public Property TelemetryClient As IBotTelemetryClient" />
      <MemberSignature Language="F#" Value="member this.TelemetryClient : Microsoft.Bot.Builder.IBotTelemetryClient with get, set" Usage="Microsoft.Bot.Builder.Dialogs.Recognizer.TelemetryClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs</AssemblyName>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.IBotTelemetryClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the currently configured <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient" /> that logs the RecognizerResult event.
            </summary>
        <value>The <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient" /> being used to log events.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
