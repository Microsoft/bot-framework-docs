<Type Name="ICredentialProvider" FullName="Microsoft.Bot.Connector.ICredentialProvider">
  <TypeSignature Language="C#" Value="public interface ICredentialProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICredentialProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.ICredentialProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICredentialProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>3.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAppPasswordAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetAppPasswordAsync (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetAppPasswordAsync(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ICredentialProvider.GetAppPasswordAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppPasswordAsync (appId As String) As Task(Of String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">bot appid</param>
        <summary>
            Get the app password for a given bot appId, if it is not a valid appId, return Null
            </summary>
        <returns>password or null for invalid appid</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticationDisabledAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsAuthenticationDisabledAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsAuthenticationDisabledAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ICredentialProvider.IsAuthenticationDisabledAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAuthenticationDisabledAsync () As Task(Of Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Checks if bot authentication is disabled.
            </summary>
        <returns>true if bot authentication is disabled.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAppIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsValidAppIdAsync (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsValidAppIdAsync(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.ICredentialProvider.IsValidAppIdAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidAppIdAsync (appId As String) As Task(Of Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"></param>
        <summary>
            Validate AppId
            </summary>
        <returns>true if it is a valid AppId for the controller</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>